name: Build and release workflow

on:
  push:
    tags:
      - "*" # triggers only if push new tag version, like `0.8.4` or else

jobs:
  build-rmap:
    name: Build and release rmap
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: cli

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # See: https://goreleaser.com/ci/actions/

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Generate sbom
        run: |
          wget -qO- "https://github.com/spdx/spdx-sbom-generator/releases/download/v0.0.15/spdx-sbom-generator-v0.0.15-linux-amd64.tar.gz" | \
          tar xvz && \
          chmod +x spdx-sbom-generator
          ./spdx-sbom-generator --path .
          rm spdx-sbom-generator
        shell: bash

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4.1.0
        with:
          version: latest
          workdir: cli
          args: release --config .goreleaser.yml --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GO_RELEASER_GITHUB_TOKEN }}

  build-reconmapd:
    name: Build and release reconmapd
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: agent

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # See: https://goreleaser.com/ci/actions/

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Generate sbom
        run: |
          wget -qO- "https://github.com/spdx/spdx-sbom-generator/releases/download/v0.0.15/spdx-sbom-generator-v0.0.15-linux-amd64.tar.gz" | \
          tar xvz && \
          chmod +x spdx-sbom-generator
          ./spdx-sbom-generator --path .
          rm spdx-sbom-generator
        shell: bash

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4.1.0
        with:
          version: latest
          workdir: agent
          args: release --config .goreleaser.yml --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GO_RELEASER_GITHUB_TOKEN }}
